import 'package:kali_on_debian/kali_tools/select_tools_to_install.dart';

enum KaliToolsExploitationEnum {
  armitage,
  beef_xss,
  exploitdb,
  metasploit_framework,
  msfpc,
  set,
  shellnoob,
  sqlmap,
  termineter,
}

Map<KaliToolsExploitationEnum, String> _kaliToolsDatabaseMap = {
  KaliToolsExploitationEnum.armitage: 'armitage',
  KaliToolsExploitationEnum.beef_xss: 'beef-xss',
  KaliToolsExploitationEnum.exploitdb: 'exploitdb',
  KaliToolsExploitationEnum.metasploit_framework: 'metasploit-framework',
  KaliToolsExploitationEnum.msfpc: 'msfpc',
  KaliToolsExploitationEnum.set: 'set',
  KaliToolsExploitationEnum.shellnoob: 'shellnoob',
  KaliToolsExploitationEnum.sqlmap: 'sqlmap',
  KaliToolsExploitationEnum.termineter: 'termineter',
};

extension KaliToolsExploitationEnumExt on KaliToolsExploitationEnum {
  String get package {
    switch (this) {
      default:
        return _kaliToolsDatabaseMap[this]!;
    }
  }
}

Future<ToolSelectionResult> selectKaliToolsExploitationToInstall() =>
    selectToolsToInstall<KaliToolsExploitationEnum>(
      groupName: 'kali-tools-exploitation',
      values: KaliToolsExploitationEnum.values,
      packageNameGetter: (e) => e.package,
    );
