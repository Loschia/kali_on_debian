import 'package:kali_on_debian/kali_tools/select_tools_to_install.dart';

enum KaliToolsPasswordsEnum {
  cewl,
  chntpw,
  cisco_auditing_tool,
  cmospwd,
  crackle,
  creddump7,
  crunch,
  fcrackzip,
  freerdp3_x11,
  gpp_decrypt,
  hash_identifier,
  hashcat,
  hashcat_utils,
  hashid,
  hydra,
  john,
  johnny,
  maskprocessor,
  medusa,
  mimikatz,
  ncrack,
  onesixtyone,
  ophcrack,
  ophcrack_cli,
  pack,
  pack2,
  passing_the_hash,
  patator,
  pdfcrack,
  pipal,
  polenum,
  rainbowcrack,
  rarcrack,
  rcracki_mt,
  rsmangler,
  samdump2,
  seclists,
  sipcrack,
  sipvicious,
  smbmap,
  sqldict,
  statsprocessor,
  sucrack,
  thc_pptp_bruter,
  truecrack,
  twofi,
  wordlists,
}

Map<KaliToolsPasswordsEnum, String> _kaliToolsPasswordsMap = {
  KaliToolsPasswordsEnum.cewl: 'cewl',
  KaliToolsPasswordsEnum.chntpw: 'chntpw',
  KaliToolsPasswordsEnum.cisco_auditing_tool: 'cisco-auditing-tool',
  KaliToolsPasswordsEnum.cmospwd: 'cmospwd',
  KaliToolsPasswordsEnum.crackle: 'crackle',
  KaliToolsPasswordsEnum.creddump7: 'creddump7',
  KaliToolsPasswordsEnum.crunch: 'crunch',
  KaliToolsPasswordsEnum.fcrackzip: 'fcrackzip',
  KaliToolsPasswordsEnum.freerdp3_x11: 'freerdp3-x11',
  KaliToolsPasswordsEnum.gpp_decrypt: 'gpp-decrypt',
  KaliToolsPasswordsEnum.hash_identifier: 'hash-identifier',
  KaliToolsPasswordsEnum.hashcat: 'hashcat',
  KaliToolsPasswordsEnum.hashcat_utils: 'hashcat-utils',
  KaliToolsPasswordsEnum.hashid: 'hashid',
  KaliToolsPasswordsEnum.hydra: 'hydra',
  KaliToolsPasswordsEnum.john: 'john',
  KaliToolsPasswordsEnum.johnny: 'johnny',
  KaliToolsPasswordsEnum.maskprocessor: 'maskprocessor',
  KaliToolsPasswordsEnum.medusa: 'medusa',
  KaliToolsPasswordsEnum.mimikatz: 'mimikatz',
  KaliToolsPasswordsEnum.ncrack: 'ncrack',
  KaliToolsPasswordsEnum.onesixtyone: 'onesixtyone',
  KaliToolsPasswordsEnum.ophcrack: 'ophcrack',
  KaliToolsPasswordsEnum.ophcrack_cli: 'ophcrack-cli',
  KaliToolsPasswordsEnum.pack: 'pack',
  KaliToolsPasswordsEnum.pack2: 'pack2',
  KaliToolsPasswordsEnum.passing_the_hash: 'passing-the-hash',
  KaliToolsPasswordsEnum.patator: 'patator',
  KaliToolsPasswordsEnum.pdfcrack: 'pdfcrack',
  KaliToolsPasswordsEnum.pipal: 'pipal',
  KaliToolsPasswordsEnum.polenum: 'polenum',
  KaliToolsPasswordsEnum.rainbowcrack: 'rainbowcrack',
  KaliToolsPasswordsEnum.rarcrack: 'rarcrack',
  KaliToolsPasswordsEnum.rcracki_mt: 'rcracki-mt',
  KaliToolsPasswordsEnum.rsmangler: 'rsmangler',
  KaliToolsPasswordsEnum.samdump2: 'samdump2',
  KaliToolsPasswordsEnum.seclists: 'seclists',
  KaliToolsPasswordsEnum.sipcrack: 'sipcrack',
  KaliToolsPasswordsEnum.sipvicious: 'sipvicious',
  KaliToolsPasswordsEnum.smbmap: 'smbmap',
  KaliToolsPasswordsEnum.sqldict: 'sqldict',
  KaliToolsPasswordsEnum.statsprocessor: 'statsprocessor',
  KaliToolsPasswordsEnum.sucrack: 'sucrack',
  KaliToolsPasswordsEnum.thc_pptp_bruter: 'thc-pptp-bruter',
  KaliToolsPasswordsEnum.truecrack: 'truecrack',
  KaliToolsPasswordsEnum.twofi: 'twofi',
  KaliToolsPasswordsEnum.wordlists: 'wordlists',
};

extension KaliToolsPasswordsEnumExt on KaliToolsPasswordsEnum {
  String get package {
    switch (this) {
      default:
        return _kaliToolsPasswordsMap[this]!;
    }
  }
}

Future<ToolSelectionResult> selectKaliToolsPasswordsToInstall() =>
    selectToolsToInstall<KaliToolsPasswordsEnum>(
      groupName: 'kali-tools-passwords',
      values: KaliToolsPasswordsEnum.values,
      packageNameGetter: (e) => e.package,
    );
